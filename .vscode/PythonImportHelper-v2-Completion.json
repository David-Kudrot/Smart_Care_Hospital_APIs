[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Appointment",
        "importPath": "appointment.models",
        "description": "appointment.models",
        "isExtraImport": true,
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Patient",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Patient",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Patient",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "AvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "AvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Designation",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Specialization",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ContactUs",
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "isExtraImport": true,
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Service",
        "importPath": "service.models",
        "description": "service.models",
        "isExtraImport": true,
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "appointment.migrations.0001_initial",
        "description": "appointment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('patient', '0002_alter_patient_image'),\n        ('doctor', '0003_alter_review_rating'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Appointment',\n            fields=[",
        "detail": "appointment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AppointmentAdmin",
        "kind": 6,
        "importPath": "appointment.admin",
        "description": "appointment.admin",
        "peekOfCode": "class AppointmentAdmin(admin.ModelAdmin):\n    list_display = ['doctor_name', 'patient_name', 'appointment_types', 'appointment_status', 'symptom', 'time', 'cancel']\n    def doctor_name(self,obj):\n        return f\"{obj.doctor.user.first_name} {obj.doctor.user.last_name}\"\n    def patient_name(self,obj):\n        return f\"{obj.doctor.user.first_name} {obj.doctor.user.last_name}\"\nadmin.site.register(Appointment, AppointmentAdmin)",
        "detail": "appointment.admin",
        "documentation": {}
    },
    {
        "label": "AppointmentConfig",
        "kind": 6,
        "importPath": "appointment.apps",
        "description": "appointment.apps",
        "peekOfCode": "class AppointmentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'appointment'",
        "detail": "appointment.apps",
        "documentation": {}
    },
    {
        "label": "Appointment",
        "kind": 6,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "class Appointment(models.Model):\n    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)\n    appointment_status = models.CharField(max_length=50, choices=APPOINTMENT_STATUS, default=\"Pending\")\n    appointment_types = models.CharField(max_length=50, choices=APPOINTMENT_TYPES)\n    symptom = models.TextField()\n    time = models.OneToOneField(AvailableTime, on_delete=models.CASCADE)\n    cancel = models.BooleanField(default=False)\n    def __str__(self):\n        return f\"Doctor: {self.doctor.user.first_name}, Patient: {self.patient.user.first_name}\"",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "APPOINTMENT_TYPES",
        "kind": 5,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "APPOINTMENT_TYPES = (\n    ('Online', 'Online'),\n    ('Offline', 'Offline'),\n)\nAPPOINTMENT_STATUS = (\n    ('Completed', 'Completed'),\n    ('Pending', 'Pending'),\n    ('Running', 'Running'),\n)\nclass Appointment(models.Model):",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "APPOINTMENT_STATUS",
        "kind": 5,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "APPOINTMENT_STATUS = (\n    ('Completed', 'Completed'),\n    ('Pending', 'Pending'),\n    ('Running', 'Running'),\n)\nclass Appointment(models.Model):\n    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)\n    appointment_status = models.CharField(max_length=50, choices=APPOINTMENT_STATUS, default=\"Pending\")\n    appointment_types = models.CharField(max_length=50, choices=APPOINTMENT_TYPES)",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0001_initial",
        "description": "contact_us.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactUs',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "contact_us.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0002_alter_contactus_options",
        "description": "contact_us.migrations.0002_alter_contactus_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact_us', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='contactus',\n            options={'verbose_name': 'Contact Us'},\n        ),\n    ]",
        "detail": "contact_us.migrations.0002_alter_contactus_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0003_alter_contactus_options",
        "description": "contact_us.migrations.0003_alter_contactus_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact_us', '0002_alter_contactus_options'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='contactus',\n            options={'verbose_name_plural': 'Contact Us'},\n        ),\n    ]",
        "detail": "contact_us.migrations.0003_alter_contactus_options",
        "documentation": {}
    },
    {
        "label": "ContactModelAdmin",
        "kind": 6,
        "importPath": "contact_us.admin",
        "description": "contact_us.admin",
        "peekOfCode": "class ContactModelAdmin(admin.ModelAdmin):\n    list_display = ['name', 'phone', 'problem']\nadmin.site.register(ContactUs, ContactModelAdmin)",
        "detail": "contact_us.admin",
        "documentation": {}
    },
    {
        "label": "ContactUsConfig",
        "kind": 6,
        "importPath": "contact_us.apps",
        "description": "contact_us.apps",
        "peekOfCode": "class ContactUsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact_us'",
        "detail": "contact_us.apps",
        "documentation": {}
    },
    {
        "label": "ContactUs",
        "kind": 6,
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "peekOfCode": "class ContactUs(models.Model):\n    name = models.CharField(max_length=50)\n    phone = models.CharField(max_length=15)\n    problem = models.TextField()\n    def __str__(self) -> str:\n        return self.name\n    class Meta:\n        verbose_name_plural = \"Contact Us\" #admin panel a contact uss hoye gese tai, ekhane meta die verbose_name_plural set kore dilam karon us plural form",
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0001_initial",
        "description": "doctor.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AvailableTime',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "doctor.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0002_review",
        "description": "doctor.migrations.0002_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('patient', '0002_alter_patient_image'),\n        ('doctor', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Review',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "doctor.migrations.0002_review",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0003_alter_review_rating",
        "description": "doctor.migrations.0003_alter_review_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0002_review'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='review',\n            name='rating',\n            field=models.CharField(choices=[('⭐', '⭐'), ('⭐⭐', '⭐⭐'), ('⭐⭐⭐', '⭐⭐⭐'), ('⭐⭐⭐⭐', '⭐⭐⭐⭐'), ('⭐⭐⭐⭐⭐', '⭐⭐⭐⭐⭐')], max_length=10),\n        ),",
        "detail": "doctor.migrations.0003_alter_review_rating",
        "documentation": {}
    },
    {
        "label": "SpecializationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class SpecializationAdmin(admin.ModelAdmin):\n    list_display = ['name', 'slug']\n    prepopulated_fields = {\"slug\" : (\"name\",)}\nadmin.site.register(Specialization, SpecializationAdmin)\nclass DesignationAdmin(admin.ModelAdmin):\n    list_display = ['name', 'slug']\n    prepopulated_fields = {\"slug\" : (\"name\",)}\nadmin.site.register(Designation, DesignationAdmin)\nadmin.site.register(AvailableTime)\nadmin.site.register(Doctor)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DesignationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class DesignationAdmin(admin.ModelAdmin):\n    list_display = ['name', 'slug']\n    prepopulated_fields = {\"slug\" : (\"name\",)}\nadmin.site.register(Designation, DesignationAdmin)\nadmin.site.register(AvailableTime)\nadmin.site.register(Doctor)\nadmin.site.register(Review)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DoctorConfig",
        "kind": 6,
        "importPath": "doctor.apps",
        "description": "doctor.apps",
        "peekOfCode": "class DoctorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'doctor'",
        "detail": "doctor.apps",
        "documentation": {}
    },
    {
        "label": "Specialization",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Specialization(models.Model):\n    name = models.CharField(max_length=50)\n    slug = models.SlugField(max_length=60)\n    def __str__(self) -> str:\n        return self.name\nclass Designation(models.Model):\n    name = models.CharField(max_length=50)\n    slug = models.SlugField(max_length=60)\n    def __str__(self):\n        return self.name",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Designation",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Designation(models.Model):\n    name = models.CharField(max_length=50)\n    slug = models.SlugField(max_length=60)\n    def __str__(self):\n        return self.name\nclass AvailableTime(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Doctor(models.Model):",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "AvailableTime",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class AvailableTime(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass Doctor(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"doctor/images/\")\n    specialization = models.ManyToManyField(Specialization)\n    designation = models.ManyToManyField(Designation)\n    available_time = models.ManyToManyField(AvailableTime)",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Doctor",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Doctor(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"doctor/images/\")\n    specialization = models.ManyToManyField(Specialization)\n    designation = models.ManyToManyField(Designation)\n    available_time = models.ManyToManyField(AvailableTime)\n    fee = models.IntegerField()\n    meet_link = models.CharField(max_length=100)\n    def __str__(self):\n        return f\"Dr. {self.user.first_name} {self.user.last_name}\"",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class Review(models.Model):\n    reviewer = models.ForeignKey(Patient, on_delete=models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)\n    body = models.TextField(blank=True)\n    created = models.DateTimeField(auto_now_add=True)\n    rating = models.CharField(max_length=10, choices=STAR_RATING)\n    def __str__(self):\n        return f\"{self.reviewer.user.first_name} {self.reviewer.user.last_name}\"",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "STAR_RATING",
        "kind": 5,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "STAR_RATING = (\n    ('⭐', '⭐'),\n    ('⭐⭐', '⭐⭐'),\n    ('⭐⭐⭐', '⭐⭐⭐'),\n    ('⭐⭐⭐⭐', '⭐⭐⭐⭐'),\n    ('⭐⭐⭐⭐⭐', '⭐⭐⭐⭐⭐'),\n)\nclass Review(models.Model):\n    reviewer = models.ForeignKey(Patient, on_delete=models.CASCADE)\n    doctor = models.ForeignKey(Doctor, on_delete=models.CASCADE)",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "patient.migrations.0001_initial",
        "description": "patient.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Patient',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "patient.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "patient.migrations.0002_alter_patient_image",
        "description": "patient.migrations.0002_alter_patient_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('patient', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='patient',\n            name='image',\n            field=models.ImageField(upload_to='patients/images/'),\n        ),",
        "detail": "patient.migrations.0002_alter_patient_image",
        "documentation": {}
    },
    {
        "label": "PatientAdmin",
        "kind": 6,
        "importPath": "patient.admin",
        "description": "patient.admin",
        "peekOfCode": "class PatientAdmin(admin.ModelAdmin):\n    list_display = ['first_name', 'last_name', 'phone_no', 'image']\n    def first_name(self, obj):\n        return obj.user.first_name\n    def last_name(self, obj):\n        return obj.user.last_name\nadmin.site.register(Patient, PatientAdmin)",
        "detail": "patient.admin",
        "documentation": {}
    },
    {
        "label": "PatientConfig",
        "kind": 6,
        "importPath": "patient.apps",
        "description": "patient.apps",
        "peekOfCode": "class PatientConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'patient'",
        "detail": "patient.apps",
        "documentation": {}
    },
    {
        "label": "Patient",
        "kind": 6,
        "importPath": "patient.models",
        "description": "patient.models",
        "peekOfCode": "class Patient(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(upload_to=\"patients/images/\")\n    phone_no = models.CharField(max_length=15)\n    def __str__(self):\n        return f\"{self.user.first_name} {self.user.last_name}\"",
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "service.migrations.0001_initial",
        "description": "service.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Service',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),",
        "detail": "service.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ServiceConfig",
        "kind": 6,
        "importPath": "service.apps",
        "description": "service.apps",
        "peekOfCode": "class ServiceConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'service'",
        "detail": "service.apps",
        "documentation": {}
    },
    {
        "label": "Service",
        "kind": 6,
        "importPath": "service.models",
        "description": "service.models",
        "peekOfCode": "class Service(models.Model):\n    name = models.CharField(max_length=50)\n    description = models.TextField()\n    image = models.ImageField(upload_to=\"services/images\")\n    def __str__(self):\n        return f\"{self.name}\"",
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "smart_care.asgi",
        "description": "smart_care.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "smart_care.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-poj_eyyni2gb&a5z407nguok)wf)l)-o-ubh1+nrfv1q*#ay8q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-poj_eyyni2gb&a5z407nguok)wf)l)-o-ubh1+nrfv1q*#ay8q'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'appointment',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'appointment',\n    'doctor',\n    'patient',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'smart_care.urls'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "ROOT_URLCONF = 'smart_care.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "WSGI_APPLICATION = 'smart_care.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "smart_care.settings",
        "description": "smart_care.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'uploads'",
        "detail": "smart_care.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "smart_care.urls",
        "description": "smart_care.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL,\n                          document_root=settings.MEDIA_ROOT)",
        "detail": "smart_care.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "smart_care.wsgi",
        "description": "smart_care.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "smart_care.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'smart_care.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]